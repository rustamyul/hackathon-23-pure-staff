openapi: 3.0.3
info:
  title: PureStaff
  description: |-
    This is a sample API based on the OpenAPI 3.0 specification.
  termsOfService: http://swagger.io/terms/
  contact:
    email: vladimir.konstantinov@simbirsoft.com
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: staff
    description: Operations about staff
paths:
  /:
    get:
      tags:
        - start
      summary: get start index.html
      responses:
        '200':
          description: A Index.html file
          content:
            text/html:
              schema:
                type: string
                format: binary
                example: '<!doctype html><html><head><title>webpage!</title></head><body><p>This.</p></body></html>'
        '400':
          description: Invalid
        '404':
          description: User not found
  /staff:
    get:
      tags:
        - staff
      summary: get staff profiles
      description: ''
      operationId: getStafList
      parameters:
        - name: limit
          in: query
          description: 'Amount need profiles'
          required: true
          schema:
            type: integer
            example: 1
        - name : offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/StaffListResp'
        '400':
          description: Invalid
        '404':
          description: User not found
    put:
      tags:
        - staff
      summary: insert new staff or update exist
      description: This can only be done by the logged in user.
      operationId: updateStaff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffReq'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffResp'
        '400':
          description: Invalid
  /staff/{staff_id}:
    patch:
      tags:
        - staff
      summary: Add new agreed company key to keyCompSum in Staff
      description: This can only be done by the logged in user.
      operationId: addCompKey
      parameters:
        - name: staff_id
          in: path
          description: The id that needs to be deleted
          required: true
          schema:
            type: integer
            format: int32
            example: 12
        - name: key_agreed_comp
          in: query
          description: 'company key, who like empl profile by staff_id'
          required: true
          schema:
            type: integer
            example: 100067
      responses:
        '204':
          description: Success
        '400':
          description: Invalid staff_id
        '404':
          description: Staff_id not found
    delete:
      tags:
        - staff
      summary: Delete Staff
      description: This can only be done by the logged in user.
      operationId: deleteStaff
      parameters:
        - name: staff_id
          in: path
          description: The id that needs to be deleted
          required: true
          schema:
            type: integer
            format: int32
            example: 12
      responses:
        '200':
          description: Success
        '400':
          description: Invalid staff_id
        '404':
          description: Staff_id not found
components:
  schemas:
    StaffReq:
      type: object
      properties:
        name:
          type: string
          example: Bob
        specialization:
          type: string
          example: Backend, Frontend
        aboutMe:
          type: string
          example: Hi, i'm excelent boy; Free to work
        foto:
          type: string
          description: '?url to downloud .jpeg?'
          example: localhost:C/images
    StaffResp:
      type: object
      properties:
        name:
          type: string
          example: Bob
        keyCompSum:
          type: integer
          format: int32
          example: 100
        keySelf:
          type: integer
          format: int32
          example: 50670
        specialization:
          type: string
          example: Backend, Frontend
        aboutMe:
          type: string
          example: Hi, i'm excelent boy; Free to work
        foto:
          type: string
          description: '?url to downloud .jpeg?'
          example: localhost:C/images
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: http://localhost:8080/staff/64ee562b4606600ca8d6c752
            staff:
              type: object
              properties:
                href:
                  type: string
                  example: http://localhost:8080/staff/64ee562b4606600ca8d6c752
    StaffListResp:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            staff:
              type: array
              items:
                $ref: '#/components/schemas/StaffResp'
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: http://localhost:8080/staff?page=0&size=20
            profile:
              type: object
              properties:
                href:
                  type: string
                  example: http://localhost:8080/profile/staff
        page:
          type: object
          properties:
            size:
              type: integer
              format: int32
              example: 2
            totalElements:
              type: integer
              format: int32
              example: 2
            totalPages:
              type: integer
              format: int32
              example: 1
            number:
              type: integer
              format: int32
              example: 0
    CompanyReq:
      type: object
      properties:
        name:
          type: string
          example: Simbirsoft
        foundation:
          type: integer
          format: int32
          example: 2001
        specialization:
          type: string
          example: OutStaff
        about:
          type: string
          example: The company's motto
    Company:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: Simbirsoft
        foundation:
          type: integer
          format: int32
          example: 2001
        specialization:
          type: string
          example: OutStaff
        about:
          type: string
          example: The company's motto
    VacancyReq:
      type: object
      properties:
        company_id:
          type: string
          example: 64ef5aa9763eee6e9214ebb1
        company_name:
          type: string
          example: Intel
        job_title:
          type: string
          example: Need senior BackEnd developer
        specialization:
          type: string
          example: BackEnd
        requirements:
          type: array
          items:
            type: string
          example: ["Java 11", "Spring", "Docker"]
        pay_fork:
          type: integer
          format: int32
          example: 100000
    VacancyResp:
      type: object
      properties:
        company_id:
          type: string
          example: 64ef5aa9763eee6e9214ebb1
        company_name:
          type: string
          example: Intel
        key_empl_sum:
          type: integer
          format: int32
          example: 123454
        key_self:
          type: integer
          format: int32
          example: 883454
        job_title:
          type: string
          example: Need senior BackEnd developer
        specialization:
          type: string
          example: BackEnd
        requirements:
          type: array
          items:
            type: string
          example: ["Java 11", "Spring", "Docker"]
        pay_fork:
          type: integer
          format: int32
          example: 100000
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: http://localhost:8080/vacancy/64ee562b4606600ca8d6c752
            vacancy:
              type: object
              properties:
                href:
                  type: string
                  example: http://localhost:8080/vacancy/64ee562b4606600ca8d6c752
    VacancyListResp:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            vacancy:
              type: array
              items:
                $ref: '#/components/schemas/VacancyResp'
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: http://localhost:8080/vacancy?page=0&size=20
            profile:
              type: object
              properties:
                href:
                  type: string
                  example: http://localhost:8080/profile/vacancy
        page:
          type: object
          properties:
            size:
              type: integer
              format: int32
              example: 2
            totalElements:
              type: integer
              format: int32
              example: 2
            totalPages:
              type: integer
              format: int32
              example: 1
            number:
              type: integer
              format: int32
              example: 0